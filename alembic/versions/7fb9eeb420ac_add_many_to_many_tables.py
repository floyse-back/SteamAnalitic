"""Add many-to-many tables

Revision ID: 7fb9eeb420ac
Revises: 07e7443ad8e5
Create Date: 2025-03-02 10:19:39.806274

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7fb9eeb420ac'
down_revision: Union[str, None] = '07e7443ad8e5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('category_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('category_id')
    )
    op.create_index(op.f('ix_categories_category_id'), 'categories', ['category_id'], unique=False)
    op.create_table('gamesdetails',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('steam_appid', sa.Integer(), nullable=False),
    sa.Column('publisher', sa.String(), nullable=True),
    sa.Column('developer', sa.String(), nullable=True),
    sa.Column('is_free', sa.Boolean(), nullable=True),
    sa.Column('short_description', sa.String(), nullable=True),
    sa.Column('requirements', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('initial_price', sa.Integer(), nullable=True),
    sa.Column('final_price', sa.Integer(), nullable=True),
    sa.Column('metacritic', sa.String(), nullable=True),
    sa.Column('discount', sa.Integer(), nullable=True),
    sa.Column('release_date', sa.Date(), nullable=True),
    sa.Column('categories', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ganres', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('achievements', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('release_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('recomendations', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('steam_appid'),
    sa.UniqueConstraint('steam_appid', name='uq_gamesdetails_steam_appid')
    )
    op.create_index(op.f('ix_gamesdetails_id'), 'gamesdetails', ['id'], unique=False)
    op.create_table('ganres',
    sa.Column('ganres_id', sa.Integer(), nullable=False),
    sa.Column('ganres_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('ganres_id')
    )
    op.create_index(op.f('ix_ganres_ganres_id'), 'ganres', ['ganres_id'], unique=False)
    op.create_table('publishers',
    sa.Column('publisher_id', sa.Integer(), nullable=False),
    sa.Column('publisher_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('publisher_id')
    )
    op.create_index(op.f('ix_publishers_publisher_id'), 'publishers', ['publisher_id'], unique=False)
    op.create_table('ganre_to_many',
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('ganre_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['gamesdetails.steam_appid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ganre_id'], ['ganres.ganres_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('game_id', 'ganre_id')
    )
    op.create_table('publisher_to_many',
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('publisher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['game_id'], ['gamesdetails.steam_appid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['publisher_id'], ['publishers.publisher_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('game_id', 'publisher_id')
    )
    op.drop_table('users')
    op.alter_column('historysteambase', 'data',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=False)
    op.create_index(op.f('ix_historysteambase_id'), 'historysteambase', ['id'], unique=False)
    op.alter_column('steambase', 'name',
               existing_type=sa.VARCHAR(length=400),
               nullable=True)
    op.alter_column('steambase', 'appid',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.alter_column('steambase', 'positive',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('steambase', 'negative',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('steambase', 'average_forever',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('steambase', 'average_2weeks',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('steambase', 'median_forever',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('steambase', 'median_2weeks',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('steambase', 'price',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_index(op.f('ix_steambase_id'), 'steambase', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_steambase_id'), table_name='steambase')
    op.alter_column('steambase', 'price',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('steambase', 'median_2weeks',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('steambase', 'median_forever',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('steambase', 'average_2weeks',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('steambase', 'average_forever',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('steambase', 'negative',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('steambase', 'positive',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('steambase', 'appid',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.alter_column('steambase', 'name',
               existing_type=sa.VARCHAR(length=400),
               nullable=False)
    op.drop_index(op.f('ix_historysteambase_id'), table_name='historysteambase')
    op.alter_column('historysteambase', 'data',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('steam_id', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('steam_img_url', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.drop_table('publisher_to_many')
    op.drop_table('ganre_to_many')
    op.drop_index(op.f('ix_publishers_publisher_id'), table_name='publishers')
    op.drop_table('publishers')
    op.drop_index(op.f('ix_ganres_ganres_id'), table_name='ganres')
    op.drop_table('ganres')
    op.drop_index(op.f('ix_gamesdetails_id'), table_name='gamesdetails')
    op.drop_table('gamesdetails')
    op.drop_index(op.f('ix_categories_category_id'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
